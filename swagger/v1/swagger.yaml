openapi: 3.0.1
info:
  title: API V1
  description: inter_backend
  version: v1
paths:
  "/api/v1/auth":
    post:
      tags:
        - auth
      summary: Get information of user
      description: That route is used to get information about an user
      parameters:
        - name: Authorization
          in: header
          description: Token containing email and password of the user
          required: true
          example: "token"
        - name: Content-Type
          in: header
          description: Type of the content sent in the request
          required: true
          example: "application/json"
        - name: Accept
          in: header
          description: Type of the content accepted in the response
          required: true
          example: "application/json"
        - name: AppKey
          in: header
          description: Numeric key to identify the application
          required: true
          example: "12345"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "token"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "User logged in"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
  "api/v1/users":
    get:
      tags:
        - users
      summary: Get all users
      description: That route is used to get all users
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: "name"
                        email:
                          type: string
                          example: "email"
                        phone:
                          type: string
                          example: "phone"
                        address:
                          type: string
                          example: "address"
                        status:
                          type: string
                          example: "status"
                        created_at:
                          type: string
                          example: "created_at"
                        updated_at:
                          type: string
                          example: "updated_at"
                  message:
                    type: string
                    example: "Users retrieved"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
    post:
      tags:
        - users
      summary: Create a new user
      description: That route is used to create a new user.
      parameters:
        - in: body
          name: body
          description: Data of the user to be created.
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              phone:
                type: string
              password:
                type: string
              address:
                type: string
      responses:
        '201':
          description: User has been created.
          schema:
            type: object
            properties:
              user:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
        '400':
          description: Bad request.
  api/v1/users/{userId}:
    get:
      tags:
        - users
      summary: Find user by ID
      description: That route is used to find a user by ID.
      parameters:
        - name: id
          in: path
          description: ID of the user to be found.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User found with success.
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              email:
                type: string
              phone:
                type: string
              address:
                type: string
        '404':
          description: User not found.

